/*
 * Copyright (c) The mlkem-native project authors
 * SPDX-License-Identifier: Apache-2.0 OR ISC OR MIT
 */

/*yaml
  Name: poly_tomont_asm
  Description: Convert polynomial to Montgomery domain
  Signature: void mlk_poly_tomont_asm(int16_t p[256])
  ABI:
    x0:
      type: buffer
      size_bytes: 512
      permissions: read/write
      c_parameter: int16_t p[256]
      description: Input/output polynomial
  Stack:
    bytes: 0
*/

#include "../../../common.h"
#if defined(MLK_ARITH_BACKEND_AARCH64) &&  !defined(MLK_CONFIG_MULTILEVEL_NO_SHARED)
/* simpasm: header-end */

/* Montgomery multiplication, with precomputed Montgomery twist
 * Expects modulus in consts.h[0]. */
.macro mulmod dst, src, const, const_twisted
        sqrdmulh tmp0.8h,    \src\().8h, \const_twisted\().8h
        mul      \dst\().8h, \src\().8h, \const\().8h
        mls      \dst\().8h, tmp0.8h,    modulus.h[0]
.endm

        src               .req x0
        count             .req x1
        wtmp              .req w2

        data              .req v0
        q_data            .req q0
        res               .req v1
        q_res             .req q1

        factor            .req v2
        factor_t          .req v3
        modulus           .req v4
        modulus_twisted   .req v5

        tmp0              .req v6

        .text
        .global MLK_ASM_NAMESPACE(poly_tomont_asm)
        .balign 4
MLK_ASM_FN_SYMBOL(poly_tomont_asm)

        mov wtmp, #3329 // ML-KEM modulus
        dup modulus.8h, wtmp

        mov wtmp, #20159 // Barrett twist of 1 wrt 2^27
        dup modulus_twisted.8h, wtmp

        mov wtmp, #-1044 // 2^16 % 3329
        dup factor.8h, wtmp

        mov wtmp, #-10276 // Barrett twist of -1044 (wrt 2^16)
        dup factor_t.8h, wtmp

        mov count, #8
                                              // Instructions:    16
                                              // Expected cycles: 23
                                              // Expected IPC:    0.70
                                              //
                                              // Cycle bound:     23.0
                                              // IPC bound:       0.70
                                              //
                                              // Wall time:     0.05s
                                              // User time:     0.05s
                                              //
                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        ldr q18, [x0, #32]                    // *.............................
        ldr q0, [x0, #16]                     // *.............................
        ldr q16, [x0], #64                    // .*............................
        sqrdmulh v23.8H, v0.8H, v3.8H         // ....*.........................
        mul v26.8H, v0.8H, v2.8H              // ......*.......................
        sqrdmulh v19.8H, v16.8H, v3.8H        // ........*.....................
        mls v26.8H, v23.8H, v4.H[0]           // ..........*...................
        mul v29.8H, v16.8H, v2.8H             // ............*.................
        ldr q16, [x0, #-16]                   // ............*.................
        mls v29.8H, v19.8H, v4.H[0]           // ..............*...............
        str q26, [x0, #-48]                   // ...............*..............
        sqrdmulh v26.8H, v18.8H, v3.8H        // ................*.............
        mul v18.8H, v18.8H, v2.8H             // ..................*...........
        str q29, [x0, #-64]                   // ...................*..........
        sqrdmulh v29.8H, v16.8H, v3.8H        // ....................*.........
        mls v18.8H, v26.8H, v4.H[0]           // ......................*.......

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // ldr q19, [x0, #16]                  // *..............................
        // ldr q23, [x0, #32]                  // *..............................
        // ldr q17, [x0], #64                  // .*.............................
        // ldr q16, [x0, #-16]                 // ............*..................
        // sqrdmulh v28.8H, v19.8H, v3.8H      // ....*..........................
        // mul v0.8H, v19.8H, v2.8H            // ......*........................
        // sqrdmulh v24.8H, v23.8H, v3.8H      // ................*..............
        // mul v18.8H, v23.8H, v2.8H           // ..................*............
        // sqrdmulh v22.8H, v17.8H, v3.8H      // ........*......................
        // mul v26.8H, v17.8H, v2.8H           // ............*..................
        // mls v0.8H, v28.8H, v4.H[0]          // ..........*....................
        // mls v26.8H, v22.8H, v4.H[0]         // ..............*................
        // sqrdmulh v29.8H, v16.8H, v3.8H      // ....................*..........
        // str q0, [x0, #-48]                  // ...............*...............
        // mls v18.8H, v24.8H, v4.H[0]         // ......................*........
        // str q26, [x0, #-64]                 // ...................*...........

        sub count, count, #1
poly_tomont_loop:
                                              // Instructions:    20
                                              // Expected cycles: 24
                                              // Expected IPC:    0.83
                                              //
                                              // Cycle bound:     24.0
                                              // IPC bound:       0.83
                                              //
                                              // Wall time:     0.14s
                                              // User time:     0.14s
                                              //
                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        ldr q19, [x0, #16]                    // *.............................
        mul v26.8H, v16.8H, v2.8H             // l.............................
        ldr q23, [x0, #32]                    // .*............................
        ldr q17, [x0], #64                    // ..*...........................
        mls v26.8H, v29.8H, v4.H[0]           // ..l...........................
        ldr q16, [x0, #-16]                   // ...*..........................
        sqrdmulh v28.8H, v19.8H, v3.8H        // ....*.........................
        str q18, [x0, #-96]                   // ....l.........................
        mul v0.8H, v19.8H, v2.8H              // ......*.......................
        str q26, [x0, #-80]                   // .......l......................
        sqrdmulh v24.8H, v23.8H, v3.8H        // ........*.....................
        mul v18.8H, v23.8H, v2.8H             // ..........*...................
        sqrdmulh v22.8H, v17.8H, v3.8H        // ............*.................
        mul v26.8H, v17.8H, v2.8H             // ..............*...............
        mls v0.8H, v28.8H, v4.H[0]            // ................*.............
        mls v26.8H, v22.8H, v4.H[0]           // ..................*...........
        sqrdmulh v29.8H, v16.8H, v3.8H        // ....................*.........
        str q0, [x0, #-48]                    // .....................*........
        mls v18.8H, v24.8H, v4.H[0]           // ......................*.......
        str q26, [x0, #-64]                   // .......................*......

                                                  // ------ cycle (expected) ------->
                                                  // 0                        25
                                                  // |------------------------|------
        // ldr q0, [x0], #64                      // ..*.....................'.~.....
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ............*...........'.......
        // mul      v1.8h, v0.8h, v2.8h           // ..............*.........'.......
        // mls      v1.8h, v6.8h,    v4.h[0]      // ..................*.....'.......
        // str q1, [x0, #-64]                     // .......................*'.......
        // ldr q0, [x0, #-48]                     // *.......................~.......
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ....*...................'...~...
        // mul      v1.8h, v0.8h, v2.8h           // ......*.................'.....~.
        // mls      v1.8h, v6.8h,    v4.h[0]      // ................*.......'.......
        // str q1, [x0, #-48]                     // .....................*..'.......
        // ldr q0, [x0, #-32]                     // .*......................'~......
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ........*...............'.......
        // mul      v1.8h, v0.8h, v2.8h           // ..........*.............'.......
        // mls      v1.8h, v6.8h,    v4.h[0]      // ......................*.'.......
        // str q1, [x0, #-32]                     // ....~...................'...l...
        // ldr q0, [x0, #-16]                     // ...*....................'..~....
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ....................*...'.......
        // mul      v1.8h, v0.8h, v2.8h           // ~.......................l.......
        // mls      v1.8h, v6.8h,    v4.h[0]      // ..~.....................'.l.....
        // str q1, [x0, #-16]                     // .......~................'......l

        sub count, count, 1
        cbnz count, poly_tomont_loop
                                           // Instructions:    4
                                           // Expected cycles: 8
                                           // Expected IPC:    0.50
                                           //
                                           // Cycle bound:     8.0
                                           // IPC bound:       0.50
                                           //
                                           // Wall time:     0.01s
                                           // User time:     0.01s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        mul v16.8H, v16.8H, v2.8H          // *.............................
        str q18, [x0, #-32]                // *.............................
        mls v16.8H, v29.8H, v4.H[0]        // ..*...........................
        str q16, [x0, #-16]                // .......*......................

                                            // ------ cycle (expected) ------>
                                            // 0                        25
                                            // |------------------------|-----
        // mul v26.8H, v16.8H, v2.8H        // *..............................
        // mls v26.8H, v29.8H, v4.H[0]      // ..*............................
        // str q18, [x0, #-32]              // *..............................
        // str q26, [x0, #-16]              // .......*.......................


        ret

        .unreq src
        .unreq count
        .unreq wtmp

        .unreq data
        .unreq q_data
        .unreq res
        .unreq q_res

        .unreq factor
        .unreq factor_t
        .unreq modulus
        .unreq modulus_twisted

        .unreq tmp0

/* simpasm: footer-start */
#endif /* MLK_ARITH_BACKEND_AARCH64 && !MLK_CONFIG_MULTILEVEL_NO_SHARED */
